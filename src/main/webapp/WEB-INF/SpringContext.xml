<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

     <!-- 使用spring提供的PropertyPlaceholderConfigurer读取数据库配置信息.properties -->
     <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
          <property name="order" value="1"/>
          <property name="ignoreUnresolvablePlaceholders" value="true"/>
     </bean>

     <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
          <property name="dataSource" ref="mySqlDataSource"/>
          <qualifier value="platform"/>
     </bean>
     <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
     <context:annotation-config/>
     <context:component-scan base-package="com"/>
     <aop:aspectj-autoproxy/>

     <!-- 使用annotation定义事务 -->
     <tx:annotation-driven transaction-manager="transactionManager"/>

     <!--Session工厂类的配置 -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
          <property name="configLocation" value="/WEB-INF/mybatis-config.xml" />
          <property name="dataSource" ref="mySqlDataSource" />
          <property name="mapperLocations" value="classpath*:/mybatis/*.xml"/>
     </bean>

     <bean id="mySqlDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
          <!-- 基本属性 url、user、password -->

          <property name="url" value="jdbc:mysql://127.0.0.1:3306/test?characterEncoding=UTF-8"/>
          <property name="username" value="root"/>
          <property name="password" value="123456"/>

          <!-- 配置初始化大小、最小、最大 -->
          <property name="initialSize" value="1"/>
          <property name="minIdle" value="1"/>
          <property name="maxActive" value="20"/>

          <!-- 配置获取连接等待超时的时间 -->
          <property name="maxWait" value="60000"/>

          <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
          <property name="timeBetweenEvictionRunsMillis" value="60000"/>

          <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
          <property name="minEvictableIdleTimeMillis" value="300000"/>

          <property name="validationQuery" value="SELECT 'x'"/>
          <property name="testWhileIdle" value="true"/>
          <property name="testOnBorrow" value="false"/>
          <property name="testOnReturn" value="false"/>

          <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
          <property name="poolPreparedStatements" value="true"/>
          <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

          <!-- 配置监控统计拦截的filters -->
          <property name="filters" value="stat"/>
     </bean>
</beans>
